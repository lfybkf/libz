<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

<#
Dictionary<string, string> cs2reader = new Dictionary<string, string>()
{
	{"int", "Int32"}, {"int?", "Int32"}, {"long", "Int64"}, {"long?", "Int64"},
	{"decimal", "Decimal"}, {"decimal?", "Decimal"}, {"DateTime", "DateTime"}, {"DateTime?", "DateTime"},
	{"float", "Float"}, {"float?", "Float"}, {"double", "Double"}, {"double?", "Double"},
	{"bool", "Boolean"}, {"bool?", "Boolean"}, {"string", "String"}, 
};

string[] value_types= {"int", "long", "float", "double", "decimal", "DateTime", "bool"};
 #>


using System;
using System.Data.Common;

namespace BDB
{
	public static class DbDataReaderExtension
	{
		public static string GetString(this DbDataReader reader, string Col)
		{
			int i = reader.GetOrdinal(Col);
			return reader.GetString(i);
		}//func

<#		foreach (string type in cs2reader.Keys.Where(s => !s.Contains("?") && s != "string")) { #>
		public static <#= type #> Get(this DbDataReader reader, string Col, <#= type #> Def)
		{
			int i = reader.GetOrdinal(Col);
			return reader.Get<#=cs2reader[type] #>(i);
		}//func

		public static <#= type #> Get<#=cs2reader[type] #>(this DbDataReader reader, string Col)
		{
			int i = reader.GetOrdinal(Col);
			return reader.Get<#=cs2reader[type] #>(i);
		}//func

<#		}//for #>


<#		foreach (string type in cs2reader.Keys.Where(s => s.Contains("?") || s == "string")) { #>
		public static <#= type #> Get(this DbDataReader reader, string Col, <#= type #> Def)
		{
			int i = reader.GetOrdinal(Col);
			if (reader.IsDBNull(i))
				return Def;
			else
				return reader.Get<#=cs2reader[type] #>(i);
		}//func

		public static <#= type #> Get<#=cs2reader[type] #>Nullable(this DbDataReader reader, string Col)
		{
			int i = reader.GetOrdinal(Col);
			if (reader.IsDBNull(i))
				return null;
			else
				return reader.Get<#=cs2reader[type] #>(i);
		}//func

<#		}//for #>
	}//class
}//ns
